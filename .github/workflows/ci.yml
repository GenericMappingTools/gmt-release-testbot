# This workflow tests GMT releases on various platforms

name: Test GMT releases

on:
  push:
    branches:
    - master
  pull_request:
  # weekly schedule job
  schedule:
  - cron: '0 0 * * 0'

env:
  # The GMT version we're testing
  GMT_VERSION: 6.1.1
  # disable auto-display of figures
  GMT_END_SHOW: off

jobs:
  macos-bundle:
    name: Bundle - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macOS-10.15, macOS-11.0]

    env:
      GMT_BUNDLE_URL: https://github.com/GenericMappingTools/gmt/releases/download/6.1.1/gmt-6.1.1-darwin-x86_64.dmg

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Install via Bundle
        run: |
          bash install-gmt-via-bundle.sh
          GMTHOME=/Applications/GMT.app/Contents/Resources
          echo "PROJ_LIB=${GMTHOME}/share/proj6" >> $GITHUB_ENV
          echo "MAGICK_CONFIGURE_PATH=${GMTHOME}/lib/GraphicsMagick/config" >> $GITHUB_ENV
          echo "${GMTHOME}/bin" >> $GITHUB_PATH

      - name: Run tests
        run: bash test-gmt.sh

  macos-homebrew:
    name: Homebrew - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macOS-10.15, macOS-11.0]

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Install via Homebrew
        run: bash install-gmt-via-homebrew.sh

      - name: Run tests
        run: bash test-gmt.sh

  macos-macports:
    name: MacPorts - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macOS-10.15, macOS-11.0]

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Install via MacPorts
        run: |
          bash install-gmt-via-macports.sh
          echo "/opt/local/bin" >> $GITHUB_PATH

      - name: Run tests
        run: bash test-gmt.sh

  conda:
    name: Conda - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2.0.0
        with:
          python-version: 3.8
          channels: conda-forge
          miniconda-version: "latest"

      - name: Install GMT
        shell: bash -l {0}
        run: conda install --yes gmt graphicsmagick

      - name: Run tests
        shell: bash -l {0}
        run: bash test-gmt.sh

      - name: Run Batch tests
        shell: cmd /C CALL {0}
        run: test-gmt.bat
        if: runner.os == 'Windows'

  docker-fedora:
    name: Docker - ${{ matrix.os }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os: ["fedora:31", "fedora:32", "fedora:33", "fedora:rawhide"]

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Run docker
        run: |
          docker run -e GMT_END_SHOW -e GMT_VERSION -v `pwd`:`pwd` -w `pwd` --rm ${{ matrix.os }} /bin/bash -c '
            dnf -yq install dnf-plugins-core
            dnf -yq copr enable genericmappingtools/gmt
            dnf -yq install gmt
            dnf -yq install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm
            dnf -yq install GraphicsMagick ffmpeg gdal
            bash test-gmt.sh
          '

  docker-centos:
    name: Docker - ${{ matrix.os }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
          os: ["centos:7", "centos:8"]

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Run docker
        run: |
          docker run -e GMT_END_SHOW -e GMT_VERSION -v `pwd`:`pwd` -w `pwd` --rm ${{ matrix.os }} /bin/bash -c '
            yum -yq install epel-release
            yum -yq install yum-plugin-copr
            yum -yq copr enable genericmappingtools/gmt

            version=$(rpm -E %rhel)
            # See https://github.com/GenericMappingTools/gmt/issues/3433
            if [ "${version}" == "8" ]; then
              yum config-manager --set-enabled PowerTools
            fi

            yum -yq install gmt
            yum -yq localinstall --nogpgcheck https://download1.rpmfusion.org/free/el/rpmfusion-free-release-$(rpm -E %rhel).noarch.rpm
            yum -yq install GraphicsMagick ffmpeg gdal
            bash test-gmt.sh
          '
  windows:
    name: Windows
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        arch: ["win32", "win64"]

    env:
      GMT_INSTALLER_URL: https://github.com/GenericMappingTools/gmt/releases/download/6.1.1/gmt-6.1.1-${{ matrix.arch }}.exe

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Install GMT
        shell: bash
        run: |
          bash install-gmt-windows.sh
          echo "C:/programs/gmt6/bin" >> $GITHUB_PATH
          #echo 'C:\programs\gmt6\bin' >> $GITHUB_PATH
          echo "C:/Program Files/GraphicsMagick-1.3.32-Q8" >> $GITHUB_PATH

      - name: Run tests
        shell: bash
        run: bash test-gmt.sh

      - name: Run Batch tests
        shell: cmd
        run: |
          echo %PATH%
          call test-gmt.bat

